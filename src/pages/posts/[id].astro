---
import { getCollection, render } from "astro:content";
import PostLayout from "@/layouts/PostLayout.astro";
import { DemoRenderer } from "@/components/DemoRender";
import { filterPosts } from "@/lib/utils";
import { getImage } from "astro:assets";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const pathsPromises = posts.map(async (post) => {
    let images: any = {};
    if (post.data.image) {
      const optimizedImage = await getImage({
        src: post.data.image,
        width: 1000,
        height: 1000,
        format: "avif",
        quality: 100,
      });
      images.optimizedImageSrc = optimizedImage.src;

      // Generate OG image (1200x630 is the recommended OG image size)
      const ogImage = await getImage({
        src: post.data.image,
        width: 1200,
        height: 630,
        format: "png",
        quality: 90,
      });
      images.ogImageSrc = `${Astro.site || "https://heymynameisrob.com"}${ogImage.src}`;
    }

    if (post.data.imageDark) {
      const optimizedImageDark = await getImage({
        src: post.data.imageDark,
        width: 1000,
        height: 1000,
        format: "avif",
        quality: 100,
      });
      images.optimizedImageDarkSrc = optimizedImageDark.src;
    }

    return {
      params: { id: post.id },
      props: { post: { ...post, ...images } },
    };
  });

  return Promise.all(pathsPromises);
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<PostLayout frontmatter={{...post.data, og: post.ogImageSrc}}>
  {post.data.type === "demo" && <DemoRenderer client:load post={post} />}
  <Content />
</PostLayout>
