---
import { isBefore, isEqual } from "date-fns";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Timeline from "@/components/Timeline.astro";
import PostIcon from "@/components/PostIcon.astro";

type PostTypes = 'post' | 'case-study' | 'demo' | 'photos' | 'project';

interface MetaContent {
  title: string;
  description: string;
}

// Get the category ID from the URL parameters
const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/404');
}

export async function getStaticPaths() {
  const allPosts = await getCollection('posts');

  const today = new Date();
  const allValidPosts = allPosts.filter(post => {
    const postDate = new Date(post.data.date);
    return isBefore(postDate, today) || isEqual(postDate, today);
  }).sort((a, b) =>
    new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );

  const uniqueCategories = allValidPosts
    .map(post => post.data.type)
    .filter((type, index, array) => array.indexOf(type) === index);

  return uniqueCategories.map(category => ({
    params: { id: category },
    props: {
      posts: allValidPosts.filter(post => post.data.type === category)
    }
  }));
}

const { posts } = Astro.props;

const META: Record<PostTypes, MetaContent> = {
  "post": {
    title: "Posts",
    description: "Thoughts, ideas, and ramblings on design"
  },
  "case-study": {
    title: "Studies",
    description: "In-depth studies of products I've worked on"
  },
  "demo": {
    title: "Demos",
    description: "Interactive prototypes and hand-crafted examples "
  },
  "photos": {
    title: "Photos",
    description: "Photo journal from my travels"
  },
  "project": {
    title: "Projects",
    description: "Side and personal projects I've shipped"
  }
}

---

<Layout>
  <header class="flex flex-col gap-4 lg:items-center lg:flex-row">
    <PostIcon type={id} className="lg:size-10" />
    <div class="flex flex-col">
      <h1 class="text-base font-medium text-primary">{META[id].title}</h1>
      <p class="text-secondary">{META[id].description}</p>
    </div>
  </header>
  <section class="flex flex-col gap-2 py-6 lg:py-12">
    <Timeline posts={posts} showRail={false} />
  </section>
</Layout>
